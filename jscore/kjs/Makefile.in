# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBCURLDIR = @LIBCURLDIR@
LIBCURL_INCLUDE = @LIBCURL_INCLUDE@
LIBCURL_LIBS = @LIBCURL_LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
YACC = @YACC@
am__include = @am__include@
am__quote = @am__quote@
curl_config = @curl_config@
install_sh = @install_sh@

# Process this file with automake to produce Makefile.in
NULL = 

AM_CPPFLAGS = -include $(top_srcdir)/JavaScriptCorePrefix.h

lib_LTLIBRARIES = libjscore.la

libjscore_cpp_sources = \
	array_object.cpp \
	bool_object.cpp \
	collector.cpp \
	date_object.cpp \
	debugger.cpp \
	dtoa.cpp \
	error_object.cpp \
	fpconst.cpp \
	function.cpp \
	function_object.cpp \
	identifier.cpp \
	internal.cpp \
	interpreter.cpp \
	interpreter_map.cpp \
	lexer.cpp \
	list.cpp \
	lookup.cpp \
	math_object.cpp \
	nodes2string.cpp \
	nodes.cpp \
	number_object.cpp \
	object.cpp \
	object_object.cpp \
	operations.cpp \
	property_map.cpp \
	reference.cpp \
	reference_list.cpp \
	regexp.cpp \
	regexp_object.cpp \
	scope_chain.cpp \
	string_object.cpp \
	testkjs.cpp \
	ustring.cpp \
	protected_values.cpp \
	value.cpp \
	$(NULL)


libjscore_h_private_sources = \
	array_instance.h \
	array_object.h \
	bool_object.h \
	collector.h \
	context.h \
	date_object.h \
	debugger.h \
	dtoa.h \
	error_object.h \
	function.h \
	function_object.h \
	internal.h \
	lexer.h \
	math_object.h \
	nodes.h \
	number_object.h \
	object_object.h \
	regexp.h \
	regexp_object.h \
	string_object.h \
	protected_values.h \
	new \
	$(NULL)


libjscore_h_public_sources = \
	simple_number.h \
	completion.h \
	list.h \
	scope_chain.h \
	reference.h \
	reference_list.h \
	property_map.h \
	identifier.h \
	lookup.h \
	operations.h \
	ustring.h \
	interpreter.h \
	interpreter_map.h \
	object.h \
	types.h \
	value.h \
	protect.h \
	../pcre/pcre.h\
	$(NULL)


#global.h 
LUT_FILES = math_object.lut.h lexer.lut.h array_object.lut.h date_object.lut.h string_object.lut.h number_object.lut.h
GRAMMAR_FILES = grammar.h grammar.cpp.h grammar.cpp

YFLAGS = -d --file-prefix=grammar --name-prefix=kjsyy --output-file=grammar.cpp

CREATE_HASH_TABLE = $(srcdir)/create_hash_table

BUILT_SOURCES = $(GRAMMAR_FILES) $(LUT_FILES) 

libjscore_la_SOURCES = \
	$(libjscore_cpp_sources)\
	$(libjscore_h_private_sources)\
	$(libjscore_h_public_sources)\
	$(LUT_FILES)\
	$(GRAMMAR_FILES)\
	$(NULL)


EXTRA_DIST = test.js


# $(libjscore_h_private_sources) get installed because khtml/ecma/kjs_bindings.cpp
# includes internal.h 
noinst_HEADERS = $(BUILT_SOURCES) $(LUT_FILES) 
libjscoreincludedir = $(includedir)/osb/JavaScriptCore/
libjscoreinclude_HEADERS = $(libjscore_h_public_sources) $(libjscore_h_private_sources)

libjscore_la_LDFLAGS = -version-info 0:0:0 @LINK_FLAGS@ 
libjscore_la_LIBADD = ../pcre/libjscore_pcre.la
subdir = kjs
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libjscore_la_DEPENDENCIES = ../pcre/libjscore_pcre.la
am__objects_1 =
am__objects_2 = array_object.lo bool_object.lo collector.lo \
	date_object.lo debugger.lo dtoa.lo error_object.lo fpconst.lo \
	function.lo function_object.lo identifier.lo internal.lo \
	interpreter.lo interpreter_map.lo lexer.lo list.lo lookup.lo \
	math_object.lo nodes2string.lo nodes.lo number_object.lo \
	object.lo object_object.lo operations.lo property_map.lo \
	reference.lo reference_list.lo regexp.lo regexp_object.lo \
	scope_chain.lo string_object.lo testkjs.lo ustring.lo \
	protected_values.lo value.lo $(am__objects_1)
am__objects_3 = $(am__objects_1)
am__objects_4 = grammar.lo
am_libjscore_la_OBJECTS = $(am__objects_2) $(am__objects_3) \
	$(am__objects_3) $(am__objects_1) $(am__objects_4) \
	$(am__objects_1)
libjscore_la_OBJECTS = $(am_libjscore_la_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/array_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/bool_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/collector.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/date_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/debugger.Plo ./$(DEPDIR)/dtoa.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/error_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/fpconst.Plo ./$(DEPDIR)/function.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/function_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/grammar.Plo ./$(DEPDIR)/identifier.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/internal.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/interpreter.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/interpreter_map.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/lexer.Plo ./$(DEPDIR)/list.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/lookup.Plo ./$(DEPDIR)/math_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/nodes.Plo ./$(DEPDIR)/nodes2string.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/number_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/object_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/operations.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/property_map.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/protected_values.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/reference.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/reference_list.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/regexp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/regexp_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/scope_chain.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/string_object.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/testkjs.Plo ./$(DEPDIR)/ustring.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/value.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libjscore_la_SOURCES)
HEADERS = $(libjscoreinclude_HEADERS) $(noinst_HEADERS)

DIST_COMMON = $(libjscoreinclude_HEADERS) $(noinst_HEADERS) Makefile.am \
	Makefile.in
SOURCES = $(libjscore_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  kjs/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libjscore.la: $(libjscore_la_OBJECTS) $(libjscore_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libjscore_la_LDFLAGS) $(libjscore_la_OBJECTS) $(libjscore_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/array_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bool_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/date_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debugger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dtoa.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fpconst.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/function.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/function_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grammar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/identifier.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/internal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpreter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/interpreter_map.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lexer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lookup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/math_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nodes.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nodes2string.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/number_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/object_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/operations.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/property_map.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/protected_values.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reference.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reference_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/regexp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/regexp_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scope_chain.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/string_object.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testkjs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ustring.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/value.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
libjscoreincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-libjscoreincludeHEADERS: $(libjscoreinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libjscoreincludedir)
	@list='$(libjscoreinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libjscoreincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libjscoreincludedir)/$$f"; \
	  $(libjscoreincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libjscoreincludedir)/$$f; \
	done

uninstall-libjscoreincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libjscoreinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libjscoreincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(libjscoreincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/../pcre
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(libjscoreincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-libjscoreincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libjscoreincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLTLIBRARIES install-libjscoreincludeHEADERS \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libjscoreincludeHEADERS


$(GRAMMAR_FILES): 
	$(YACC) $(YFLAGS) grammar.y

lexer.lut.h:  
	perl $(CREATE_HASH_TABLE) keywords.table -i > $@

%.lut.h: 
	perl $(CREATE_HASH_TABLE) `echo $@ | sed -e s/.lut.h/.cpp/` -i > $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

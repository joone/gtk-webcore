dnl Process this file with autoconf to produce a configure script.

AC_INIT(osb-nrcit, 0.5.0)
AC_CONFIG_SRCDIR(src/BridgeImpl.h)
AM_INIT_AUTOMAKE

AM_CONFIG_HEADER(config.h)
AC_PROG_LIBTOOL
AM_PROG_CC_STDC
AC_PROG_CXX
AM_PROG_LEX
AC_PROG_YACC
AC_HEADER_STDC
AC_HEADER_STAT
AC_HEADER_TIME
AC_CHECK_HEADERS(alloca.h vfork.h)
AC_CHECK_HEADERS(string.h strings.h float.h fnmatch.h limits.h paths.h sys/cdefs.h sys/mman.h sys/param.h sys/select.h sys/socket.h)
AC_CHECK_FUNCS(memcpy memmove gettimeofday mkstemps mkstemp random setegid seteuid socket unsetenv vsnfprintf)

dnl MY_GET_FLAGS used for checking library cflags for
dnl libraries which do not use pkg-config, rather provide
dnl libraryname-config shell script
dnl AC_DEFUN([MY_GET_FLAGS],
dnl [AC_CHECK_PROG($1, $2, true, false,)
dnl if test x$$1 = xtrue; then 
dnl    $1_CFLAGS=`$2 --cflags`
dnl    $1_LIBS=`$2 --libs`
dnl fi
dnl ])
dnl MY_GET_FLAGS(FONTCONFIG,fontconfig-config)
dnl if test ! -n "$FONTCONFIG_CFLAGS""$FONTCONFIG_LIBS"; then
dnl    AC_MSG_ERROR([Fontconfig is required, but not found. Provide PATH with directory where fontconfig-config is])
dnl fi
dnl MY_GET_FLAGS(XFT,xft-config)
dnl if test -n "$XFT_CFLAGS $XFT_LIBS"; then
dnl    AC_MSG_ERROR([Xft is required, but not found. Provide PATH with directory where xft-config is])
dnl fi


# Check for pkg-config
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test $PKG_CONFIG = no; then
   AC_MSG_ERROR([Cannot find pkg-config, make sure it is installed and in your PATH])
fi


dnl check common gtk modules
PKG_CHECK_MODULES(PACKAGE, [gtk+-2.0 >= 2.2.0, gdk-pixbuf-2.0 >= 2.2.0, glib-2.0 >= 2.2.0, libxml-2.0 >= 2.6.0])

dnl check for OSB JSCore
PKG_CHECK_MODULES(JSCORE, [osb-jscore])

dnl check for OSB NRCore
PKG_CHECK_MODULES(NRCORE, [osb-nrcore])

dnl check for X libraries
AC_PATH_XTRA
X_LIBS="-lXt $X_LIBS"

dnl check for fontconfig
PKG_CHECK_MODULES(FONTCONFIG, [fontconfig >= 1.0.0])


dnl check xft
PKG_CHECK_MODULES(XFT, [xft >= 2.0.0])


dnl debugging info commandline argument
use_debug=
AC_ARG_ENABLE([debug], 
  AC_HELP_STRING([--enable-debug], [enable debug mode (default:disabled)]),
  use_debug=true,,)

if test -n "$use_debug"; then 
   CPPFLAGS="$CPPFLAGS -DDEBUG" 
else
   CPPFLAGS="$CPPFLAGS -DNDEBUG"
fi  

dnl check for libcurl

AC_ARG_WITH([libcurl],
  AC_HELP_STRING([--with-libcurl=prefix], [use libcurl (default: )]))

libcurl_prefix=$with_libcurl
AC_PATH_PROG(curl_config, curl-config, ,[$libcurl_prefix/bin:$PATH] )

if test -n "$curl_config"; then				    
 LIBCURL_CFLAGS="`$curl_config --cflags`"
 LIBCURL_LIBS="`$curl_config --libs`"
 AC_DEFINE([HAVE_LIBCURL],[1],[Define to 1 if you want to use libcurl http library.])
 if test -z $with_libcurl; then
    with_libcurl=yes
 fi
else
 AC_MSG_ERROR([curl-config not found, or curl-config not in path])
fi

AM_CONDITIONAL(USE_LIBCURL, test x$with_libcurl != x)
dnl check for jscore

AC_ARG_WITH([javascriptcore-prefix],
	AC_HELP_STRING([--with-javascriptcore-prefix],
		       [use javascriptcore prefix (default: $jscore_prefix)]))

DEFINES="-DG_DISABLE_DEPRECATED -DGDK_PIXBUF_DISABLE_DEPRECATED -DGTK_DISABLE_DEPRECATED"

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall " ;;
  esac
  case " $CXXFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CXXFLAGS="$CXXFLAGS -Wall " ;;
  esac
fi
changequote([,])dnl

#
# substitutions for osb-config
#
if test "x$prefix" = "xNONE"; then
   nrcore_prefix=$ac_default_prefix
else
   nrcore_prefix=$prefix
fi

NRCORE_LIBS="-L$libdir -lkwiq_khtml -lkwiq_gtk $LIBCURL_LIBS"
NRCORE_PREFIX="$nrcore_prefix"
NRCORE_CFLAGS="-I$nrcore_prefix/include/osb/NRCore $LIBCURL_CFLAGS"
AC_SUBST(NRCORE_LIBS)
AC_SUBST(NRCORE_PREFIX)
AC_SUBST(NRCORE_CFLAGS)


AC_SUBST(LIBCURL_LIBS) #needed by the osb-nrcore.pc.in


CXXFLAGS="$CXXFLAGS -fno-exceptions -fno-rtti -nostdinc++"

CPPFLAGS="$CPPFLAGS $PACKAGE_CFLAGS $X_CFLAGS $XFT_CFLAGS $FONTCONFIG_CFLAGS $JSCORE_CFLAGS $NRCORE_CFLAGS $DEFINES"
LDFLAGS="$LDFLAGS $PACKAGE_LIBS $X_LIBS $XFT_LIBS $FONTCONFIG_LIBS  $JSCORE_LIBS \
-nodefaultlibs -lgcc -lc"



AC_OUTPUT([
Makefile
osb-nrcit.pc
src/Makefile
src/gtk/Makefile
])

